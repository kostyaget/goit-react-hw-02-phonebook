{"ast":null,"code":"var _jsxFileName = \"D:\\\\GidHub Progects\\\\REACT\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\contactForm\\\\contactForm.js\";\nimport s from \"./contactForm.module.css\";\nimport propTypes from \"prop-types\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      id: '',\n      number: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        id,\n        value\n      } = event.currentTarget;\n      this.setState({\n        name: value,\n        id: id\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        number\n      } = this.state;\n      const newObject = {\n        name: name,\n        number: number\n      };\n      this.props.data(newObject);\n      this.setState({\n        name: '',\n        id: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.contacts_label,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          name: \"name\",\n          value: this.state.name,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.contacts_label,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"tel\",\n          name: \"number\",\n          value: this.state.number,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactForm;\nContactForm.propTypes = {\n  data: propTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/GidHub Progects/REACT/goit-react-hw-02-phonebook/src/components/contactForm/contactForm.js"],"names":["s","propTypes","React","Component","ContactForm","state","name","id","number","handleChange","event","value","currentTarget","setState","handleSubmit","e","preventDefault","newObject","props","data","render","contacts_label","input","func","isRequired"],"mappings":";AAAA,OAAOA,CAAP,MAAc,0BAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCE,KADkC,GAC1B;AACFC,MAAAA,IAAI,EAAE,EADJ;AAEFC,MAAAA,EAAE,EAAE,EAFF;AAGFC,MAAAA,MAAM,EAAE;AAHN,KAD0B;;AAAA,SAOlCC,YAPkC,GAOnBC,KAAK,IAAI;AACtB,YAAM;AAAEH,QAAAA,EAAF;AAAMI,QAAAA;AAAN,UAAgBD,KAAK,CAACE,aAA5B;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEK,KAAR;AAAeJ,QAAAA,EAAE,EAAEA;AAAnB,OAAd;AACD,KAViC;;AAAA,SAYlCO,YAZkC,GAYnBC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEV,QAAAA,IAAF;AAAQE,QAAAA;AAAR,UAAmB,KAAKH,KAA9B;AACA,YAAMY,SAAS,GAAG;AAAEX,QAAAA,IAAI,EAAEA,IAAR;AAAcE,QAAAA,MAAM,EAAEA;AAAtB,OAAlB;AACA,WAAKU,KAAL,CAAWC,IAAX,CAAgBF,SAAhB;AAEA,WAAKJ,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE,EAAR;AAAaC,QAAAA,EAAE,EAAE,EAAjB;AAAoBC,QAAAA,MAAM,EAAE;AAA5B,OAAd;AACD,KAnBiC;AAAA;;AAqBlCY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAEd,CAAC,CAACqB,cAApB;AAAA,wCAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,SAAS,EAAErB,CAAC,CAACsB,KADf;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,IAJpB;AAKE,UAAA,OAAO,EAAC,wHALV;AAME,UAAA,KAAK,EAAC,wIANR;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,QAAQ,EAAE,KAAKG;AARjB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAO,QAAA,SAAS,EAAET,CAAC,CAACqB,cAApB;AAAA,0CAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,SAAS,EAAErB,CAAC,CAACsB,KADf;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWG,MAJpB;AAKE,UAAA,OAAO,EAAC,wFALV;AAME,UAAA,KAAK,EAAC,8FANR;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,QAAQ,EAAE,KAAKC;AARjB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eA8BE;AAAA;AAAA;AAAA;AAAA,cA9BF,eA+BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmCD;;AAzDiC;;AA4DpC,eAAeL,WAAf;AAEAA,WAAW,CAACH,SAAZ,GAAwB;AACtBkB,EAAAA,IAAI,EAAElB,SAAS,CAACsB,IAAV,CAAeC;AADC,CAAxB","sourcesContent":["import s from \"./contactForm.module.css\";\r\nimport propTypes from \"prop-types\";\r\nimport React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n        name: '',\r\n        id: '',\r\n        number: '',\r\n    }\r\n\r\n  handleChange = event => {\r\n    const { id, value } = event.currentTarget;\r\n    this.setState({ name: value, id: id});\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newObject = { name: name, number: number };\r\n    this.props.data(newObject);\r\n\r\n    this.setState({ name: '',  id: '',number: ''});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label className={s.contacts_label}>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label className={s.contacts_label}>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  data: propTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}