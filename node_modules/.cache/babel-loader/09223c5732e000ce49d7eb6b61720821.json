{"ast":null,"code":"var _jsxFileName = \"D:\\\\GidHub Progects\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\contactForm\\\\contactForm.js\";\nimport s from \"./contactForm.module.css\";\nimport propTypes from \"prop-types\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        number\n      } = this.state;\n      const newobject = {\n        name: name,\n        number: number\n      };\n      this.props.data(newobject);\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.contacts_label,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          name: \"name\",\n          value: this.handleChange,\n          onChange: this.handleChange,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.contacts_lable,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"tel\",\n          name: \"number\",\n          value: this.state.number,\n          onChange: this.handleChange,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default ContactForm;\nContactForm.propTypes = {\n  data: propTypes.func\n};","map":{"version":3,"sources":["D:/GidHub Progects/goit-react-hw-02-phonebook/src/components/contactForm/contactForm.js"],"names":["s","propTypes","React","Component","ContactForm","state","name","number","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","newobject","props","data","render","contacts_label","input","contacts_lable","func"],"mappings":";AAAA,OAAOA,CAAP,MAAc,0BAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KADwB;;AAAA,SAGhCC,YAHgC,GAGjBC,CAAC,IAAI;AAChB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQI;AAAV,OAAd;AACH,KAN+B;;AAAA,SAOhCG,YAPgC,GAOjBJ,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAM;AAAER,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAmB,KAAKF,KAA9B;AACA,YAAMU,SAAS,GAAG;AAAET,QAAAA,IAAI,EAAEA,IAAR;AAAcC,QAAAA,MAAM,EAAEA;AAAtB,OAAlB;AACA,WAAKS,KAAL,CAAWC,IAAX,CAAgBF,SAAhB;AAEA,WAAKH,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACH,KAd+B;AAAA;;AAgBhCW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA,8BACI;AAAO,QAAA,SAAS,EAAEb,CAAC,CAACmB,cAApB;AAAA,wCAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AACI,UAAA,SAAS,EAAEnB,CAAC,CAACoB,KADjB;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,KAAK,EAAE,KAAKZ,YAJhB;AAKI,UAAA,QAAQ,EAAE,KAAKA,YALnB;AAMI,UAAA,OAAO,EAAC,wHANZ;AAOI,UAAA,KAAK,EAAC,wIAPV;AAQI,UAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAO,QAAA,SAAS,EAAER,CAAC,CAACqB,cAApB;AAAA,0CAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AACI,UAAA,SAAS,EAAErB,CAAC,CAACoB,KADjB;AAEI,UAAA,IAAI,EAAC,KAFT;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,MAJtB;AAKI,UAAA,QAAQ,EAAE,KAAKC,YALnB;AAMI,UAAA,OAAO,EAAC,wFANZ;AAOI,UAAA,KAAK,EAAC,8FAPV;AAQI,UAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,eA8BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkCH;;AAnD+B;;AAoDnC;AAED,eAAeJ,WAAf;AAEAA,WAAW,CAACH,SAAZ,GAAwB;AACpBgB,EAAAA,IAAI,EAAEhB,SAAS,CAACqB;AADI,CAAxB","sourcesContent":["import s from \"./contactForm.module.css\";\r\nimport propTypes from \"prop-types\";\r\nimport React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n    state = { name: '', number: '' };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        const newobject = { name: name, number: number };\r\n        this.props.data(newobject);\r\n\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label className={s.contacts_label}>\r\n                    Name\r\n                    <br />\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.handleChange}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label className={s.contacts_lable}>\r\n                    Number\r\n                    <br />\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    data: propTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}