{"ast":null,"code":"var _jsxFileName = \"D:\\\\GidHub Progects\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport ContactForm from \"./contactForm\";\nimport Filter from \"./filter\";\nimport ContactList from \"./contactList\";\nimport s from \"./contactForm/contactForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Пожилой Фермер',\n        number: '666-66-66'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.eraseContact = elem => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.name !== elem)\n      }));\n    };\n\n    this.accumulateContacts = data => {\n      if (this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase())) {\n        alert(`${data.name} is already in contacts`);\n        return;\n      }\n\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [data, ...contacts]\n        };\n      });\n    };\n\n    this.handleFilteredItems = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.filteredItems = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n  }\n\n  render() {\n    const filteredItems = this.filteredItems();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        data: this.accumulateContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        eventHandler: this.handleFilteredItems,\n        options: this.state.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        children: [\"contacts=\", filteredItems, \"onDeleteContact=\", this.deleteContact]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App; // export const App = () => {\n//   return (\n//     <div\n//       style={{\n//         height: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         fontSize: 40,\n//         color: '#010101'\n//       }}\n//     >\n//       React homework template\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["D:/GidHub Progects/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["React","Component","ContactForm","Filter","ContactList","s","App","state","contacts","id","name","number","filter","eraseContact","elem","setState","prevState","contact","accumulateContacts","data","find","toLowerCase","alert","handleFilteredItems","e","currentTarget","value","filteredItems","normalizedFilter","includes","deleteContact","contactId","render","container"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport ContactForm from \"./contactForm\";\r\nimport Filter from \"./filter\";\r\nimport ContactList from \"./contactList\";\r\nimport s from \"./contactForm/contactForm.module.css\";\r\n\r\n class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      {id: 'id-1', name: 'Пожилой Фермер', number: '666-66-66'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  eraseContact = (elem) => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.name !== elem),\r\n    }));\r\n  }\r\n\r\n  accumulateContacts = data => {\r\n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase())) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [data, ...contacts],\r\n    }));\r\n  };\r\n\r\n  handleFilteredItems = (e) => {\r\n    this.setState({filter: e.currentTarget.value})\r\n  }\r\n\r\n  filteredItems = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n   };\r\n\r\n   deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n   };\r\n   \r\n   render() {\r\n    const filteredItems = this.filteredItems();\r\n    return (\r\n      <div className={s.container}>\r\n        <h2>Phonebook</h2>\r\n        <ContactForm data={this.accumulateContacts} />\r\n        <h2>Contacts</h2>\r\n        <Filter eventHandler={this.handleFilteredItems} options={this.state.filter}/>\r\n        <ContactList>\r\n          contacts={filteredItems}\r\n          onDeleteContact={this.deleteContact}\r\n        </ContactList>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default App;\r\n// export const App = () => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         height: '100vh',\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         fontSize: 40,\r\n//         color: '#010101'\r\n//       }}\r\n//     >\r\n//       React homework template\r\n//     </div>\r\n//   );\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}